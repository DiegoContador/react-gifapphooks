{"version":3,"sources":["components/AddCategory.js","components/GifGridItem.js","helpers/getGifts.js","components/GifGrid.js","hooks/useFetchGifs.js","GiftExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","categ","value","onChange","target","GifGridItem","props","className","src","img","url","alt","title","id","getGifs","category","a","encodeURI","fetch","resp","json","data","gifs","map","images","downsized_medium","GifGRid","loading","state","setState","useEffect","getGifts","then","imgs","useFetchGifs","GiftExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"qMAyBeA,EArBK,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EAEDC,mBAAS,IAFR,mBAE9BC,EAF8B,KAElBC,EAFkB,KAYrC,OACI,uBAAMC,SAPW,SAACC,GAElBA,EAAEC,iBACFN,GAAc,SAAAO,GAAK,OAAKL,GAAL,mBAAmBK,QAItC,UACI,6BAAKL,IACL,uBAAOM,MAAON,EAAYO,SAZb,SAACJ,GAClBF,EAAcE,EAAEK,OAAOF,cCIhBG,EAVK,SAACC,GAEjB,OACI,sBAAKC,UAAU,oCAAf,UACI,6BAAwB,qBAAKC,IAAKF,EAAMG,IAAIC,IAAKC,IAAKL,EAAMG,IAAIG,SAAvDN,EAAMG,IAAII,IACnB,4BAAIP,EAAMG,IAAIG,Y,uBCQXE,EAfF,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DACNN,EADM,iDAC0CO,UAAUF,GADpD,+DAEOG,MAAMR,GAFb,cAENS,EAFM,gBAGSA,EAAKC,OAHd,uBAGLC,EAHK,EAGLA,KAEDC,EAAOD,EAAKE,KAAI,SAACd,GAAS,IAAD,EAC3B,MAAO,CACHI,GAAIJ,EAAII,GACRD,MAAOH,EAAIG,MACXF,IAAG,UAAED,EAAIe,cAAN,aAAE,EAAYC,iBAAiBf,QAT9B,kBAYLY,GAZK,4CAAH,sDCwBEI,EApBC,SAAC,GAAgB,IAAfX,EAAc,EAAdA,SAAc,ECDJ,SAACA,GAAc,IAAD,EAEZpB,mBAAS,CAC/B0B,KAAM,GACNM,SAAS,IAJyB,mBAE/BC,EAF+B,KAExBC,EAFwB,KAmBtC,OAZAC,qBAAU,WACNC,EAAShB,GACJiB,MAAK,SAAAC,GAEFJ,EAAS,CAELR,KAAKY,EACLN,SAAS,SAIvB,CAACZ,IACIa,EDhBwBM,CAAanB,GAA/BS,EAFe,EAErBH,KAAcM,EAFO,EAEPA,QAErB,OACI,qCACA,oBAAIpB,UAAU,oCAAd,SAAmDQ,IAClDY,GAAW,mBAAGpB,UAAU,mCAAb,wBACZ,qBAAKA,UAAU,YAAf,SAEKiB,EAAOD,KAAI,SAACd,GACT,OAAO,cAAC,EAAD,CAA0BA,IAAKA,GAAbA,EAAII,aEgB9BsB,EA3BO,WAAO,IAAD,EAEYxC,mBAAS,CAAC,kBAFtB,mBAEjByC,EAFiB,KAEL1C,EAFK,KAOxB,OAGI,qCACI,+CACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBAEA,6BACK0C,EAAWb,KAAI,SAACR,GACb,OAAO,cAAC,EAAD,CAAwBA,SAAUA,GAApBA,Y,MCfzCsB,IAASC,OAAQ,cAAC,EAAD,IAAkBC,SAASC,eAAe,W","file":"static/js/main.7353b95b.chunk.js","sourcesContent":["import React, {useState} from 'react';\r\n\r\n\r\n\r\nconst AddCategory = ({setCategories}) => {\r\n\r\n    const [inputValue, setInputValue] = useState('');\r\n    const handleChange = (e) => {\r\n        setInputValue(e.target.value);\r\n    }\r\n    const handleSubmit = (e) => {\r\n        \r\n        e.preventDefault();\r\n        setCategories(categ => [inputValue,...categ]);\r\n    }\r\n\r\n    return(\r\n        <form onSubmit={handleSubmit}>\r\n            <h1>{inputValue}</h1>\r\n            <input value={inputValue} onChange={handleChange}/>\r\n        </form>\r\n\r\n    )\r\n}\r\n\r\nexport default AddCategory;","import React from 'react';\r\n\r\nconst GifGridItem = (props) => {\r\n   \r\n    return (\r\n        <div className='animate__animated animate__fadeIn'>\r\n            <li key={props.img.id} ><img src={props.img.url} alt={props.img.title}/></li>\r\n            <p>{props.img.title}</p>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default GifGridItem;","const getGifs = async(category) => {\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=AhPIm0ja86iHIjvZ7fS5T8K3mET5L1qp`;\r\n    const resp = await fetch(url);\r\n    const {data} = await resp.json();\r\n\r\n    const gifs = data.map((img) => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    });\r\n    return gifs;\r\n}\r\n\r\nexport default getGifs;","import React from 'react';\r\nimport GifGridItem from './GifGridItem';\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\n\r\nconst GifGRid = ({category}) => {\r\n\r\n    const {data: images, loading}= useFetchGifs(category);\r\n\r\n    return (\r\n        <>\r\n        <h2 className='animate__animated animate__fadeIn'>{category}</h2>\r\n        {loading && <p className='animate__animated animate__flash'>Loading...</p>}\r\n        <div className=\"card-grid\">\r\n            \r\n            {images.map((img) => {\r\n                return <GifGridItem key={img.id} img={img}/>;\r\n            })}\r\n            \r\n        </div>\r\n        </>\r\n    );\r\n\r\n}\r\n\r\nexport default GifGRid;","import { useState, useEffect } from 'react';\r\nimport getGifts from '../helpers/getGifts';\r\n\r\nexport const useFetchGifs = (category) => {\r\n\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect(() => {\r\n        getGifts(category)\r\n            .then(imgs => {\r\n\r\n                setState({\r\n                \r\n                    data:imgs,\r\n                    loading: false\r\n                })                    \r\n                \r\n            })\r\n    },[category])\r\n    return state;\r\n}","import React, {useState} from 'react';\r\nimport AddCategory from './components/AddCategory';\r\nimport GifGRid from './components/GifGrid';\r\n\r\nconst GiftExpertApp = () => {\r\n\r\n    const [categories, setCategories] = useState(['One Punch Man']);\r\n    // const handleClick = () => {\r\n    //     setCategories(categ => ['Batman',...categories]);\r\n    // }\r\n\r\n    return(\r\n\r\n\r\n        <>\r\n            <h1>GiftExpertApp</h1>\r\n            <AddCategory setCategories={setCategories}/>\r\n            <hr/>\r\n            \r\n            <ol>\r\n                {categories.map((category )=> {\r\n                    return <GifGRid key={category} category={category} />\r\n                })\r\n                }\r\n            </ol>\r\n            \r\n        </>\r\n    );\r\n\r\n}\r\n\r\nexport default GiftExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GiftExpertApp from './GiftExpertApp';\nimport './index.css';\n\n\nReactDOM.render( <GiftExpertApp />,document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}